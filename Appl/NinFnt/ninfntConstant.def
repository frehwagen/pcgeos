COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1991 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Nimbus Font Converter
FILE:		ninfntConstant.def

AUTHOR:		Gene Anderson, Apr 17, 1991

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	eca	4/17/91		Initial revision
	JDM	91.05.08	String length constants.
	JDM	91.05.22	Added normalized font name support.

DESCRIPTION:
	This file contains the constant defintions for the Nimbus
	Font Converter application.
		
	$Id: ninfntConstant.def,v 1.1 97/04/04 16:16:55 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;==============================================================================
;
;	Errors returned by Nimbus conversion routines
;		NOTE: This enum is used to index into the table of error
;		      messages.  Do not add enums without adding strings
;		      or rearrange the enum, or you will die.
;
;==============================================================================

NimbusError	etype	word, 0, 2
NE_FILE_ABORT		enum NimbusError		;not really an error
NE_FILE_OPEN		enum NimbusError
NE_FILE_CLOSE		enum NimbusError
NE_FILE_READ		enum NimbusError
NE_FILE_CREATE		enum NimbusError
NE_FILE_WRITE		enum NimbusError
NE_MEM_ALLOC		enum NimbusError
NE_BAD_DATA		enum NimbusError
NE_NO_CHARS		enum NimbusError
NE_ACCENT_CHAR_MISSING	enum NimbusError
NE_NO_FONT_ID		enum NimbusError
NE_FONT_ID_IN_USE	enum NimbusError
NE_FONT_EXISTS		enum NimbusError

;==============================================================================
;
;	Fatal Errors
;
;==============================================================================

TOO_MANY_HINTS			enum FatalErrors
BAD_NIMBUS_COMMAND		enum FatalErrors
CHARACTER_NOT_FOUND		enum FatalErrors
FONT_NAME_TOO_LONG		enum FatalErrors
TOO_MANY_FONTS			enum FatalErrors

;==============================================================================
;
;	Font Structures
;
;==============================================================================

NewFontHeader struc
    NFH_h_height	word	(?)		;top of 'H'	(Nimbus)
    NFH_x_height	word	(?)		;top of 'x'	(Nimbus)
    NFH_ascender	word	(?)		;top of 'd'	(Nimbus)
    NFH_descender	word	(?)		;bottom of 'p'	(Nimbus)
    NFH_avgwidth	word	(?)		;average character width
    NFH_maxwidth	word	(?)		;widest character width
    NFH_height		word	(?)		;height of font box
    NFH_accent		word	(?)		;height of accents
    NFH_ascent		word	(?)		;height of caps
    NFH_descent		word	(?)		;descent (from baseline)
    NFH_baseAdjust	word	(?)		;adjustment for baseline
    NFH_firstChar	Chars	(?)		;first char defined
    NFH_lastChar	Chars	(?)		;last char defined
    NFH_defaultChar	Chars	(?)		;default character
    NFH_underPos	word	(?)		;position of underline
    NFH_underThick	word	(?)		;thickness of underline
    NFH_strikePos	word	(?)		;position of strikethrough
    NFH_numChars	word	(?)		;number of characters
    NFH_minLSB		sword	(?)		;minimum left side bearing
    NFH_minTSB		sword	(?)		;minimum top side bound
    NFH_maxBSB		sword	(?)		;maximum bottom side bound
    NFH_maxRSB		sword	(?)		;maximum right side bound
    NFH_continuitySize	sword	(?)		;continuity cutoff
NewFontHeader ends

NewWidth	struc
    NW_width		word			;width of character
    NW_flags		CharTableFlags		;character data flags
NewWidth	ends

;==============================================================================
;
;	Other Structures & Constants
;
;==============================================================================

;
; Flags for each CharConvertEntry -- determines how character
; is used for calculating values in font header.
;
CharConvFlags	record
    :3
    CCF_CAP:1					;use for CAP height
    CCF_ASCENT:1				;use for ascent
    CCF_DESCENT:1				;use for descent
    CCF_MEAN:1					;use for mean / x height
    CCF_ACCENT:1				;use for accent height
CharConvFlags	end

;
; Entry for each character -- used to map URW --> PC/GEOS,
; and for font header calculation.
;
CharConvertEntry	struc
    CCE_urwID		word			;URW ID
    CCE_weight		byte			;weight for weighted average
    CCE_flags		CharConvFlags		;flags for calculation
CharConvertEntry	ends

;==============================================================================
;
;	PC/GEOS particular constants
;
;==============================================================================

DEFAULT_CONTINUITY_CUTOFF	equ	25	;continuity checking cutoff
DEFAULT_DEFAULT_CHAR		equ	'.'	;default character value
NIMBUS_GRID_SIZE		equ	1000	;data grid size
NIMBUS_BASELINE			equ	750	;baseline offset
NIMBUS_DESCENT			equ	250	;descent
NIMBUS_DEFAULT_UNDER_THICK	equ	100
NIMBUS_DEFAULT_UNDER_POSITION	equ	-100
NIMBUS_SAFETY			equ	25

NIMBUS_WEIGHT_TOTAL		equ	1000

;==============================================================================
;
;	internal structures and constants
;
;==============================================================================

;
; Common local variables for conversion routines
;
ScanLocals	struc
    SL_weightTotal		word		;total weight of weights
    SL_weightAvg		dword		;total of weighted widths
    SL_sourceFileHandle		hptr		;source file handle
    SL_destFileHandle		hptr		;dest file handle
    SL_sourceBlockHandle	hptr		;source block handle
    SL_destBlockHandle		hptr		;dest block handle
    SL_destBlockSize		word		;size of dest block
    SL_headerHandle		hptr		;handle of DTC font header
    SL_firstChar		Chars		;first PC/GEOS character found
    SL_lastChar			Chars		;last PC/GEOS character found
    SL_actualChar		Chars		;actual (upcased) char
ScanLocals	ends

;
; Per Nimbus style entry
;
FontStyleEntry		struc
    FSE_style		TextStyles		;style(s) of font
    FSE_weight		FontWeight		;weight of font
    FSE_filename	char 13 dup (?)		;8.3 file name
FontStyleEntry		ends
;
; Per Nimbus font entry
;
FontConvertEntry	struc
    FCE_name		lptr				;full name of font
    FCE_normName	lptr				;normalized name.
    FCE_activeEntries	word				;# of entries
    FCE_fontID		FontIDs				;asssigned font ID
    FCE_font		FontStyleEntry 4 dup (?)	;4 filenames & styles
FontConvertEntry	ends

;
; Stuff normally internal to PC/GEOS kernel
;
FONT_SIG_LOW		equ	('S' shl 8) or 'B'
FONT_SIG_HIGH		equ	('F' shl 8) or 'W'

MAJOR_VER_NUMBER	equ	1

FontFileInfo	struc
    FFI_signature	char 4 dup(?)		;"BSWF"
    FFI_minorVer	byte			;minor version (0)
    FFI_majorVer	byte			;major version (1)
    FFI_headerSize	word			;size of font info section
FontFileInfo	ends

FontFileHeader	struc
    FFH_fileInfo	FontFileInfo		;file info
    FFH_fontID		FontIDs			;font ID
    FFH_maker		FontMakers		;font manufacturer
    FFH_family		FontFamily		;font family
    FFH_name		char FONT_NAME_LEN dup(?)
FontFileHeader	ends

CheckHack <(offset FI_fontID)-(offset FI_RESIDENT) eq 0>

;
; Size of the block to allocate and read into when checking for the font
; file header information.
;
NIMBUS_TAG_BLOCK_SIZE	equ	(1024)

;
; Identifications for each of the currently supported nimbus font
; file formats.
;
NIMBUS_VERSION_2X	equ	(0)
NIMBUS_VERSION_3X	equ	(1)
NIMBUS_VERSION_ZSOFT	equ	(3)

;
; Size of the conversion status rectangle.
;
CONVERSION_RECT_MAX_HORZ_SIZE	equ	(225)
CONVERSION_RECT_MAX_VERT_SIZE	equ	(10)
